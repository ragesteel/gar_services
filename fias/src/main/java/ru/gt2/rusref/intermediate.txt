Промежуточная таблица с ключами

== План ==

  * (yes) Специальная логика, чтобы промежуточная таблица была зависима от основной — в функции получения порядка.
    Там можно вообще сделать так, чтобы она не участвовала в расчётах порядка, а всегда шла после основной таблицы.
    orderForCreation() — то как сейчас.
    orderForLoad() — добавить зависимость загрузки промежуточных таблиц.
  * Доработка тестов, чтобы пропускало отсутствие Xml-аннотаций плюс отключение остальных проверок.
  * Таблица AddressObjectLevel;
  * Таблица NormativeDocumentType;

== Сущность справочника ==

  * Добавление в enum Fias;
  * Автоматическое создание;
  * Просто отдельный класс;

Кажется проще всего сделать по варианту «Добавление в enum Fias».

=== Добавление в enum Fias ===

Плюсы:
  * Упрощение работы;
  * Никакого дополнительного параметра в @FiasRef;
Минусы:
  * Нужно добавлять исключения в обработку, т.к. в оригинальном ФИАСе таких данных нет;

=== Автоматическое создание ===

По выполнению условия «внешний ключ не на первичное поле» делаем таблицу.

Плюсы:
  * Всё будет работать автоматически;
Минусы:
  * Добавление параметра в @FiasRef;
  * Похоже самый сложный способ;

=== Просто отдельный класс ===

Плюсы:
  * Чуть более идеологически верно, чем добавление enum'а в Fias;
Минусы:
  * Нужно добавлять создание не только по Fias, но и по классу;
  * Нужна специальная обработка, чтобы можно было принимать не только Fias но и этот класс;

== Варианты заполнения ==

Второй вариант кажется наиболее адекватным.

=== Собственный файл с данными ===

Плюсы:
  * Единообразность заполнения;
Минусы:
  * Необходимость генерирования;

=== Заполнение из базы ===

С помощью INSERT INTO … SELECT DISTINCT … FROM …

Плюсы:
  * Отсутствие дополнительных файлов;
  * Отсутствие прохода по большому файлу, т.к. нам нужны только ключи;
Минусы:
  * Необходимость писать новый тип запроса в базу;

=== Заполнение из файла основного класса ===

Плюсы:
  * Отсутствие дополнительных файлов;
Минусы:
  * Дополнительный проход по файлу данных;
  * Расширение логики LOAD DATA INFILE …;